diff -u snappy-java-1.0.5.orig/Makefile snappy-java-1.0.5/Makefile
--- snappy-java-1.0.5.orig/Makefile	2013-05-17 01:29:31.000000000 +0000
+++ snappy-java-1.0.5/Makefile	2014-04-03 05:56:59.386989995 +0000
@@ -1,7 +1,7 @@
 
 include Makefile.common
 
-MVN:=mvn
+MVN:=xmvn -o
 
 all: snappy
 
@@ -10,21 +10,21 @@
 SNAPPY_CC:=snappy-sinksource.cc snappy-stubs-internal.cc snappy.cc
 SNAPPY_SRC_DIR:=$(TARGET)/snappy-$(VERSION)
 SNAPPY_SRC:=$(addprefix $(SNAPPY_SRC_DIR)/,$(SNAPPY_CC))
-SNAPPY_OBJ:=$(addprefix $(SNAPPY_OUT)/,$(patsubst %.cc,%.o,$(SNAPPY_CC)) SnappyNative.o)
+SNAPPY_OBJ:=$(addprefix $(SNAPPY_OUT)/, SnappyNative.o)
 
 SNAPPY_UNPACKED:=$(TARGET)/snappy-extracted.log
 
-CXXFLAGS:=$(CXXFLAGS) -I$(SNAPPY_SRC_DIR)
+CXXFLAGS:=$(CXXFLAGS) -I$(SNAPPY_SRC_DIR) -lsnappy
 
 $(SNAPPY_ARCHIVE):
 	@mkdir -p $(@D)
-	curl -o$@ http://snappy.googlecode.com/files/snappy-$(VERSION).tar.gz
+	#curl -o$@ http://snappy.googlecode.com/files/snappy-$(VERSION).tar.gz
 
 $(SNAPPY_UNPACKED): $(SNAPPY_ARCHIVE)
-	tar xvfz $< -C $(TARGET)	
-	touch $@
+	#tar xvfz $< -C $(TARGET)	
+	#touch $@
 
-jni-header: $(SRC)/org/xerial/snappy/SnappyNative.h
+#jni-header: $(SRC)/org/xerial/snappy/SnappyNative.h
 
 
 $(SRC)/org/xerial/snappy/SnappyNative.h: $(SRC)/org/xerial/snappy/SnappyNative.java
@@ -42,7 +42,7 @@
 
 $(SNAPPY_OUT)/%.o : $(SNAPPY_SRC_DIR)/%.cc
 	@mkdir -p $(@D)
-	$(CXX) $(CXXFLAGS) -c $< -o $@ 
+	#$(CXX) $(CXXFLAGS) -c $< -o $@ 
 
 $(SNAPPY_OUT)/SnappyNative.o : $(SRC)/org/xerial/snappy/SnappyNative.cpp $(SRC)/org/xerial/snappy/SnappyNative.h  
 	@mkdir -p $(@D)
@@ -63,7 +63,8 @@
 NATIVE_TARGET_DIR:=$(TARGET)/classes/org/xerial/snappy/native/$(OS_NAME)/$(OS_ARCH)
 NATIVE_DLL:=$(NATIVE_DIR)/$(LIBNAME)
 
-snappy-jar-version:=snappy-java-$(shell $(JAVA) -jar lib/silk-weaver.jar find 'project(artifactId, version)' pom.xml | grep snappy-java | awk '{ print $$2; }')
+#snappy-jar-version:=snappy-java-$(shell $(JAVA) -jar lib/silk-weaver.jar find 'project(artifactId, version)' pom.xml | grep snappy-java | awk '{ print $$2; }')
+snappy-jar-version:=snappy-java-1.0.5
 
 native: $(SNAPPY_UNPACKED) $(NATIVE_DLL) 
 snappy: native $(TARGET)/$(snappy-jar-version).jar
@@ -76,7 +77,7 @@
 
 
 $(TARGET)/$(snappy-jar-version).jar: native $(NATIVE_DLL)
-	$(MVN) package -Dmaven.test.skip=true
+	#$(MVN) package -Dmaven.test.skip=true
 
 test: $(NATIVE_DLL)
 	$(MVN) test
diff -u snappy-java-1.0.5.orig/Makefile.common snappy-java-1.0.5/Makefile.common
--- snappy-java-1.0.5.orig/Makefile.common	2013-03-28 06:27:26.000000000 +0000
+++ snappy-java-1.0.5/Makefile.common	2014-04-03 05:58:12.366471014 +0000
@@ -41,8 +41,13 @@
 
 # os=Default is meant to be generic unix/linux
 
-known_os_archs := Linux-i386 Linux-amd64 Linux-arm Linux-armhf Mac-i386 Mac-x86_64 FreeBSD-amd64 Windows-x86 Windows-amd64
-os_arch := $(OS_NAME)-$(OS_ARCH)
+known_os_archs := Linux Mac-x86 Mac-x86_64 FreeBSD-x86_64 Windows-x86 Windows-x86_64 SunOS-x86 SunOS-sparc
+# trust the platform CXXFLAGS, etc. on Linux
+ifeq ($(OS_NAME),Linux)
+  os_arch := $(OS_NAME)
+else
+  os_arch := $(OS_NAME)-$(OS_ARCH)
+endif
 
 ifeq (,$(findstring $(strip $(os_arch)),$(known_os_archs)))
   os_arch := Default
@@ -58,39 +63,18 @@
 Default_LIBNAME      := libsnappyjava.so
 Default_SNAPPY_FLAGS := 
 
-Linux-i386_CXX       := $(CROSS_PREFIX)g++
-Linux-i386_STRIP     := $(CROSS_PREFIX)strip
-Linux-i386_CXXFLAGS  := -include lib/inc_linux/jni_md.h -I$(JAVA_HOME)/include -O2 -fPIC -fvisibility=hidden -m32
-Linux-i386_LINKFLAGS := -shared -static-libgcc -static-libstdc++
-Linux-i386_LIBNAME   := libsnappyjava.so
-Linux-i386_SNAPPY_FLAGS:= 
-
-Linux-amd64_CXX       := $(CROSS_PREFIX)g++ 
-Linux-amd64_STRIP     := $(CROSS_PREFIX)strip
-Linux-amd64_CXXFLAGS  := -include lib/inc_linux/jni_md.h -I$(JAVA_HOME)/include -O2 -fPIC -fvisibility=hidden -m64
-Linux-amd64_LINKFLAGS := -shared -static-libgcc -static-libstdc++
-Linux-amd64_LIBNAME   := libsnappyjava.so
-Linux-amd64_SNAPPY_FLAGS  := 
+Linux_CXX          := g++
+Linux_STRIP        := strip
+Linux_CXXFLAGS     := -I$(JAVA_HOME)/include $(CXXFLAGS) -fPIC -fvisibility=hidden
+Linux_LINKFLAGS    := -shared -static-libgcc -static-libstdc++ 
+Linux_LIBNAME      := libsnappyjava.so
+Linux_SNAPPY_FLAGS := 
 
 # '-include lib/inc_linux/jni_md.h' is used to force the use of our version,
 # which defines JNIEXPORT differently; otherwise, since OpenJDK includes
 # jni_md.h in same directory as jni.h, the include path is ignored when
 # jni_md.h is included from jni.h
 
-Linux-arm_CXX       := $(CROSS_PREFIX)g++
-Linux-arm_STRIP     := $(CROSS_PREFIX)strip
-Linux-arm_CXXFLAGS  := -include lib/inc_linux/jni_md.h -I$(JAVA_HOME)/include -O2 -fPIC -fvisibility=hidden -mfloat-abi=softfp
-Linux-arm_LINKFLAGS := -shared -static-libgcc
-Linux-arm_LIBNAME   := libsnappyjava.so
-Linux-arm_SNAPPY_FLAGS:= 
-
-Linux-armhf_CXX       := $(CROSS_PREFIX)g++
-Linux-armhf_STRIP     := $(CROSS_PREFIX)strip
-Linux-armhf_CXXFLAGS  := -include lib/inc_linux/jni_md.h -I$(JAVA_HOME)/include -O2 -fPIC -fvisibility=hidden -mfloat-abi=hard
-Linux-armhf_LINKFLAGS := -shared -static-libgcc
-Linux-armhf_LIBNAME   := libsnappyjava.so
-Linux-armhf_SNAPPY_FLAGS:= 
-
 Mac-i386_CXX       := g++ -arch $(OS_ARCH) 
 Mac-i386_STRIP     := strip -x
 Mac-i386_CXXFLAGS  := -Ilib/inc_mac -I$(JAVA_HOME)/include -O2 -fPIC -mmacosx-version-min=10.4 -fvisibility=hidden
diff -u snappy-java-1.0.5.orig/Makefile.package snappy-java-1.0.5/Makefile.package
--- snappy-java-1.0.5.orig/Makefile.package	2013-05-17 01:29:31.000000000 +0000
+++ snappy-java-1.0.5/Makefile.package	2014-04-01 23:19:06.452440621 +0000
@@ -77,6 +77,6 @@
 	ssh $(AMD_SERVER) "source .zprofile && cd $(WORK) && $(TEST_CMD)"
 
 release:
-	mvn deploy -DperformRelease=true
+	#mvn deploy -DperformRelease=true
 
 
